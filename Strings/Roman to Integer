Link: https://leetcode.com/problems/roman-to-integer/

Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.

Input: s = "III"
Output: 3
Explanation: III = 3.

Solution:
class Solution {
public:
    int romanToInt(string s) {
        unordered_map<char, int> map;
        map.insert({'I', 1});
        map.insert({'V', 5});
        map.insert({'X', 10});
        map.insert({'L', 50});
        map.insert({'C', 100});
        map.insert({'D', 500});
        map.insert({'M', 1000});
        
        int res = 0;
        int n = s.length();
        
        for(int i = 0; i < n - 1; i++){
            if((s[i] == 'I') && (s[i+1] == 'V' || s[i+1] == 'X')){
                res -= map[s[i]];
            }
            else if((s[i] == 'X') && (s[i+1] == 'L' || s[i+1] == 'C')){
                res -= map[s[i]];
            }
            else if((s[i] == 'C') && (s[i+1] == 'D' || s[i+1] == 'M')){
                res -= map[s[i]];
            }
            else{
                res += map[s[i]];
            }
        }
        return res+map[s[n-1]];
    }
};