Link: https://practice.geeksforgeeks.org/problems/check-if-string-is-rotated-by-two-places-1587115620/1

Given two strings a and b. The task is to find if the string 'b' can be obtained by rotating another string 'a' by exactly 2 places.

Input:
a = amazon
b = azonam
Output: 1
Explanation: amazon can be rotated anti
clockwise by two places, which will make
it as azonam.

Solution:
1. Check editorial solution - without rotating actual string
2.
//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to check if a string can be obtained by rotating
    //another string by exactly 2 places.
    bool isRotated(string str1, string str2)
    {
        char temp1 = str1[str1.length()-1];
        char temp2 = str1[str1.length()-2];
        for(int i = str1.length()-3; i >= 0; i--){
            str1[i+2] = str1[i];
        }
        str1[1] = temp1;
        str1[0] = temp2;
        
        if(str1 == str2){
            return 1;
        }
        
        temp1 = str1[0];
        temp2 = str1[1];
        char temp3 = str1[2];
        char temp4 = str1[3];
        for(int i = 0; i < str1.length()-4; i++){
             str1[i] = str1[i+4];
        }
        str1[str1.length()-4] = temp1;
        str1[str1.length()-3] = temp2;
        str1[str1.length()-2] = temp3;
        str1[str1.length()-1] = temp4;
        
        if(str1 == str2){
            return 1;
        }
        
        return 0;
    }

};
