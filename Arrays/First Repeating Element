Link: https://practice.geeksforgeeks.org/problems/first-repeating-element4018/1

Given an array arr[] of size n, find the first repeating element. The element should occurs more than once and the index of its first occurrence should be the smallest.

Input:
n = 7
arr[] = {1, 5, 3, 4, 3, 5, 6}
Output: 2
Explanation: 
5 is appearing twice and 
its first appearence is at index 2 
which is less than 3 whose first 
occuring index is 3.

Solution:
1. Brute Force
2. Iterate From End and Maintain Hashtable - 
class Solution {
  public:
    // Function to return the position of the first repeating element.
    int firstRepeated(int arr[], int n) {
        // code here
        unordered_map<int, int> map;
        int res = -1;
        for(int i = n-1; i >= 0; i--){
            if(map[arr[i]]){
                res = i+1;
            }
            else{
                map[arr[i]] = i;
            }
        }
        // for(const auto& elem : map){
        //     cout << elem.first << " " << elem.second << "\n";
        // }
        return res;
        
    }
};