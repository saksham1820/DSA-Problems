Link: https://practice.geeksforgeeks.org/problems/sort-an-array-of-0s-1s-and-2s4231/1

Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.

Input: 
N = 5
arr[]= {0 2 1 2 0}
Output:
0 0 1 2 2
Explanation:
0s 1s and 2s are segregated 
into ascending order.

Solution:
1. Brute Force - 3 loops
2. Sort Algo 
3. 3 Pointer - 
class Solution
{
    public:
    
    void swap(int &a, int &b){
        int temp = a;
        a = b;
        b = temp;
    }
    
    void sort012(int arr[], int n)
    {
        int zero_pointer = 0;
        int pointer = 0;
        int two_pointer = n - 1;
        
        while(pointer <= two_pointer){
            if(arr[pointer] == 0){
                swap(arr[zero_pointer], arr[pointer]);
                zero_pointer++;
                pointer++;
            }
            else if(arr[pointer] == 2){
                swap(arr[two_pointer], arr[pointer]);
                two_pointer--;
            }
            else if(arr[pointer] == 1){
                pointer++;
            }
        }
        // code here 
    }
    
};
